{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder (2)\\\\src\\\\component\\\\App.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState }  from \"react\";\n// import Blog from './blog.jsx';\n// import Cont from './Content.jsx';\n\n// function App(){\n//     const [rssData, setRssData] = useState(null);\n//     const [loading, setLoading] = useState(false);\n\n//       setLoading(true);\n\n//       // Send request to PHP backend\n//       fetch(\"http://localhost/firstPHP/hello.php\")\n//         .then((response) => response.json())\n//         .then((data) => {\n//           console.log(data);\n//           setRssData(data); // Set the data received from the backend\n//           setLoading(false); // Stop loading once data is received\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching data:\", error);\n//           setLoading(false);\n//         });\n\n//     return(\n//     <div className=\"main\">\n//       <div className=\"card-grid\">\n//       {rssData.map((item , index) => {\n\n//           const img= item.image && item.image.length > 0 ? ( \n//                 item.imgage[1] ) : (\"flower.png\"\n//            );\n//            <Blog\n//                key={index}\n//                image={img}\n//                link={item.link}\n//                title={item.title}\n//            />\n//        })\n//       }\n\n//       </div>\n\n//     </div>\n//     );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport Blog from './blog.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [rssData, setRssData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n\n    // Send request to PHP backend\n    fetch(\"http://localhost/firstPHP/hello.php\").then(response => response.json()).then(data => {\n      console.log(data);\n      setRssData(data); // Set the data received from the backend\n      setLoading(false); // Stop loading once data is received\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n      setLoading(false);\n    });\n  }, []); // Empty dependency array ensures this runs once when the component mounts\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: rssData.map((item, index) => {\n        const img = item.image && item.image.length > 1 ? item.image[1] : \"flower.png\"; // Use default image if not available\n\n        return /*#__PURE__*/_jsxDEV(Blog, {\n          image: img,\n          link: item.link,\n          title: item.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/Vl6L2OSrPwN4Di+zbzA35XRpvM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Blog","jsxDEV","_jsxDEV","App","_s","rssData","setRssData","loading","setLoading","fetch","then","response","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","item","index","img","image","length","link","title","_c","$RefreshReg$"],"sources":["E:/New folder (2)/src/component/App.jsx"],"sourcesContent":["// import React, { useState }  from \"react\";\r\n// import Blog from './blog.jsx';\r\n// import Cont from './Content.jsx';\r\n\r\n// function App(){\r\n//     const [rssData, setRssData] = useState(null);\r\n//     const [loading, setLoading] = useState(false);\r\n  \r\n    \r\n//       setLoading(true);\r\n  \r\n//       // Send request to PHP backend\r\n//       fetch(\"http://localhost/firstPHP/hello.php\")\r\n//         .then((response) => response.json())\r\n//         .then((data) => {\r\n//           console.log(data);\r\n//           setRssData(data); // Set the data received from the backend\r\n//           setLoading(false); // Stop loading once data is received\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching data:\", error);\r\n//           setLoading(false);\r\n//         });\r\n\r\n//     return(\r\n//     <div className=\"main\">\r\n//       <div className=\"card-grid\">\r\n//       {rssData.map((item , index) => {\r\n           \r\n//           const img= item.image && item.image.length > 0 ? ( \r\n//                 item.imgage[1] ) : (\"flower.png\"\r\n//            );\r\n//            <Blog\r\n//                key={index}\r\n//                image={img}\r\n//                link={item.link}\r\n//                title={item.title}\r\n//            />\r\n//        })\r\n//       }\r\n\r\n//       </div>\r\n\r\n//     </div>\r\n//     );\r\n// }\r\n\r\n// export default App;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Blog from './blog.jsx';\r\n\r\nfunction App() {\r\n  const [rssData, setRssData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    // Send request to PHP backend\r\n    fetch(\"http://localhost/firstPHP/hello.php\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setRssData(data); // Set the data received from the backend\r\n        setLoading(false); // Stop loading once data is received\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, []); // Empty dependency array ensures this runs once when the component mounts\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"card-grid\">\r\n        {rssData.map((item, index) => {\r\n          const img = item.image && item.image.length > 1 \r\n            ? item.image[1] \r\n            : \"flower.png\"; // Use default image if not available\r\n\r\n          return (\r\n            <Blog\r\n              key={index}\r\n              image={img}\r\n              link={item.link}\r\n              title={item.title}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACdS,UAAU,CAAC,IAAI,CAAC;;IAEhB;IACAC,KAAK,CAAC,qCAAqC,CAAC,CACzCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBP,UAAU,CAACO,IAAI,CAAC,CAAC,CAAC;MAClBL,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CT,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAID,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAgB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,MAAM;IAAAL,QAAA,eACnBhB,OAAA;MAAKqB,SAAS,EAAC,WAAW;MAAAL,QAAA,EACvBb,OAAO,CAACmB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC5B,MAAMC,GAAG,GAAGF,IAAI,CAACG,KAAK,IAAIH,IAAI,CAACG,KAAK,CAACC,MAAM,GAAG,CAAC,GAC3CJ,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,GACb,YAAY,CAAC,CAAC;;QAElB,oBACE1B,OAAA,CAACF,IAAI;UAEH4B,KAAK,EAAED,GAAI;UACXG,IAAI,EAAEL,IAAI,CAACK,IAAK;UAChBC,KAAK,EAAEN,IAAI,CAACM;QAAM,GAHbL,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIX,CAAC;MAEN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CA7CQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}